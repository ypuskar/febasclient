extends layout
block content
  //modaalaknad
  #muudatekst.modal(tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true")
    .modal-dialog
      .modal-content
        .modal-header
          button.close(type="button", data-dismiss="modal")
            span(aria-hidden="true") x
            span.sr-only Close
          h4 Täienda kommentaari
        .modal-body
          form(method='POST' action='')
            div.form-group
              label(for='KOMMENTAAR') Kommentaar:
              input#KOMMENTAAR.form-control(type='text', placeholder='Lisa kommentaar' name='KOMMENTAAR' )
              input#CREATEDBY(type='hidden', name='CREATEDBY' )
              button.btn.btn-primary(type='submit') Muuda
  #ajalugu.modal(tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true")
    .modal-dialog
      .modal-content
        .modal-header
          button.close(type="button", data-dismiss="modal")
            span(aria-hidden="true") x
            span.sr-only Close
          h4 Kommentaaride ajalugu
        .modal-body
          table.table.table-bordered#kommTabel
            thead
              tr
                th Kommentaar
                th Kuupäev
                th Lisaja
            tbody
              tr
        .modal-footer
          button.btn.btn-default.close(data-dismiss='modal') Sule
  #arved.modal.printable(tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true")
    .modal-dialog.modal-lg
      .modal-content
        .modal-header
          button.close(type="button", data-dismiss="modal")
            span(aria-hidden="true") x
            span.sr-only Close
          //button.btn.btn-default.float-right#btnPrint(type='button') Trüki
          div.printSection#printThis
            h4
              span#kliendinimi tasumata arved
            .modal-body
              form.hidden#emailForm(method='POST' action='')
                .form-group
                  label(for="formcontrol1") E-maili aadress
                  input.form-control#formcontrol1(type="email", placeholder="name@example.com")
                .form-group
                label(for="formcontrol2") Sisu
                textarea.form-control#formcontrol2(rows="2")
                button.btn.btn-primary#saadaMail(type='button' style='margin: 2px') Saada
                button.btn.btn-primary#cancelMail(type='button') Cancel
              p#testarea
              table.table.table-bordered#arveTabel
                thead
                  tr
                    th Number
                    th Kuupäev
                    th Maksetähtaeg
                    th Summa
                    th Tasutud
                    th Tasumata
                    th Filiaal
                tbody
                tfoot
        .modal-footer
          button.btn.btn-default.close(data-dismiss='modal') Sule
  div.container-fluid
    div.row
      div.col-sm-8.text-center.feb_logo
        h3.whitetext .
      div.col-sm-4.text-right
        span Sisse loginud kasutaja:&nbsp
        if !user
          span.font-weigth-bold#sisseloginudkasutaja  Kasutaja
        else
          span.font-weigth-bold#sisseloginudkasutaja #{user.profile.displayName}
          span  (
          span.font-weigth-bold#sisseloginudkasutajaemail #{user.profile._json.email}
          span )
        //-
        a.font-weight-bold(href='/logout')  Logi välja
        //include ../public/images/circle-icon-red.svg
        //span.icon
          //svg(heigth="24px" width="24px")
            //use(xlink:href="../../images/circle-icon-red.svg#glassRoot")
            //circle(cx="50 cy="50" r="40" stroke="red" stroke-width="3")
        //refresh countdown timer;
        span.hidden.stop-dist#cdTimer ()
        //filtriväljade definitsioonid
        table.table.table-sm(style="width:100%")
          tbody
            tr
              td.text-right.borderless Ainult limiidi ületanud:&nbsp
              td.text-left.borderless
                input(name="limiit", id="limiit", type="checkbox")
            tr
              td.text-right.borderless Ainult maksetähtaeg ületanud:&nbsp
              td.text-left.borderless
                input(name="tahtaeg", id="tahtaeg", type="checkbox")
            tr
              td.text-right.borderless Tarnekeeld:&nbsp
              td.text-left.borderless
                | A:
                input(name="tarnekeeld", id="tarnekeeldA", type="radio", value="A")
                |  J:
                input(name="tarnekeeld", id="tarnekeeldJ", type="radio", value="J")
                |  E:
                input(name="tarnekeeld", id="tarnekeeldE", type="radio", value="E")
                |  2:
                input(name="tarnekeeld", id="tarnekeeld2", type="radio", value="2")
                |  X:
                input(name="tarnekeeld", id="tarnekeeld0", type="radio", value="0", checked)
            tr
              td.text-right.borderless Kokku = 0 Arved <> 0:&nbsp
              td.text-left.borderless
                input(name="kokkuArved", id="kokkuArved", type="checkbox")
    // klientide tabeli definitsioonid
    table.stripe.order-column#pickle
      thead
        tr
          th
          th Tarne<br>keeld
          th Koond<br>arve
          th Kliendi nimi
          th Aegumata
          th 30P
          th 180P
          th Vanem
          th &Sigma;>Tähtaja
          th Kokku
          th Tarnitud
          th Limiiti alles
          th Arveid

  script.
    //table filtering functions
    $.fn.dataTable.ext.search.push(
      function( settings, data, dataIndex, rowData, counter ) {
        //limiit valitud, tähtaeg pole valitud,
        //yle limiidi ja yle mt true või arved olemas
        if($("#limiit").is(':checked') &&
        ($("#tahtaeg").is(':checked')) &&
        (rowData.YLE_LIMIIDI) &&
        (rowData.YLE_MT) ||
        (rowData.ARVE_NUMBER != null))
          return true;
        //limiit valitud ja tähtaeg pole valitud
        //yle limiidi true
        else if($("#limiit").is(':checked') &&
        !($("#tahtaeg").is(':checked')) &&
        (rowData.YLE_LIMIIDI) )
          return true;
        //limiit, tähtaeg, tarnekeeld, kokku pole valitud
        //kui lisada uusi filtreid tuleb seda tingimust muuta
        else if(!($("#limiit").is(':checked'))&&
        !($("#tahtaeg").is(':checked'))&&
        ($("#tarnekeeld0").is(':checked'))&&
        !($("#kokkuArved").is(':checked')))
          return true;
        //limiit pole valitud, tahtaeg on valitud, ja yle mt
        else if(($("#tahtaeg").is(':checked'))&&
        !($("#limiit").is(':checked'))&&
        (rowData.YLE_MT))
          return true;
        //limiit ja tähtaeg pole valitud, tarnekeeldA valitud ja true
        else if(!($("#limiit").is(':checked'))&&
        !($("#tahtaeg").is(':checked'))&&
        ($("#tarnekeeldA").is(':checked'))&&
        (rowData.TARNEKEELD == 'A'))
          return true;
        //limiit ja tähtaeg pole valitud, tarnekeeldJ valitud ja true
        else if(!($("#limiit").is(':checked'))&&
        !($("#tahtaeg").is(':checked'))&&
        ($("#tarnekeeldJ").is(':checked'))&&
        (rowData.TARNEKEELD == 'J'))
          return true;
        //limiit ja tarnekeeld pole valitud ja tarnekeeld2 valitud ja true
        else if(!($("#limiit").is(':checked'))&&
        !($("#tahtaeg").is(':checked'))&&
        ($("#tarnekeeld2").is(':checked'))&&
        (rowData.TARNEKEELD == '2'))
          return true;
        //limiit ja tarnekeeld pole valitud ja tarnekeeldE valitud ja true
        else if(!($("#limiit").is(':checked'))&&
        !($("#tahtaeg").is(':checked'))&&
        ($("#tarnekeeldE").is(':checked'))&&
        (rowData.TARNEKEELD == 'E'))
          return true;
        //limiit, tarnekeeld pole valitud, tarnekeeld0 ja kokku valitud
        else if(!($("#limiit").is(':checked'))&&
        !($("#tahtaeg").is(':checked'))&&
        ($("#tarnekeeld0").is(':checked'))&&
        ($("#kokkuArved").is(':checked'))&&
        (rowData.KOKKU === 0)&&
        (rowData.ARVEID > 0))
          return true;
        else
          return false;
      }
    );
    //kuupäeva formaatimise funktsioon, mis kasutab moment paketti
    $.fn.dataTable.moment = function (format, locale) {
    var types = $.fn.dataTable.ext.type;

      // Add type detection
      types.detect.unshift( function ( d ) {
          return moment( d, format, locale, true ).isValid() ?
              'moment-'+format :
              null;
      } );

      // Add sorting method - use an integer for the sorting
      types.order[ 'moment-'+format+'-pre' ] = function ( d ) {
          return moment( d, format, locale, true ).unix();
      };
    };
    //change cursor during ajax call
    $(document).ajaxStart(function() {
      $(document.body).css({'cursor' : 'wait'});
      }).ajaxStop(function() {
      $(document.body).css({'cursor' : 'default'});
      });
    var mainTimeStamp = ''; //maintimestamp global variable

    //user idle time checker
    var idleTime = 0;

    $(document).ready(function() {
      //Increment the idle time counter every 5 sec.
      idleInterval = setInterval(timerIncrement, 5000); // 5 sec
          //Zero the idle timer on mouse movement.
      $('body').mousemove(function (e) {
      //alert("mouse moved" + idleTime);
      idleTime = 0;
      });

      $('body').keypress(function (e) {
      //alert("keypressed"  + idleTime);
        idleTime = 0;
      });

      $('body').click(function() {
      //alert("mouse moved" + idleTime);
       idleTime = 0;
      });
      function timerIncrement() {
        idleTime = idleTime + 1;
        }
        //Get refresh timestamp from database
        $.getJSON('/clients/customers/timestamp', function( data) {

          if(data.length > 0) {
            mainTimeStamp = data[0].DB_UPDATETIME;
            //console.log(mainTimeStamp);
          }
        });
      $.fn.dataTable.moment( 'DD/MM/YYYY' );
      var testdata = [
        {
          "kliendi_nimi":   "FEBKLIENT",
          "Maksetingimus":  "Neto"
        },
        {
          "kliendi_nimi":   "MUUKLIENT",
          "Maksetingimus":  "Bruto"
        },
        ];
      var tulemus = !{JSON.stringify(result)};
      var environment = '!{env}';
      var sisseloginud = '';
      var userUrl = '';

      if( environment == 'production'){
        //userUrl = 'https://mrvolad.feb.ee/.auth/me';
      } else if( environment == 'staging' ) {
        //userUrl = 'https://mrvolad-staging.azurewebsites.net/.auth/me';
      };
      if (userUrl != '') {

        //request for user information from Azure
        $.ajax({
          type : 'GET',
          dataType: "html",
          url: userUrl,
          xhrFields: {
            withCredentials: true
            },
          contentType:'application/json',
          crossDomain : true,
          cors: true,
          secure: true,
          headers: {
                    'Access-Control-Allow-Origin': '*',
                    'Upgrade-Insecure-Requests' : 1,
                    'Cookie': 'ARRAffinity=06002adda7a6036d27bbc5c8cba727f785428765b842d3275fde5cd467e3e7e5; AppServiceAuthSession=aVR9HcLU1ikGYTRvlEk+SrKHJECFH6giuhLWREuAKQ0gx+kxT2HEy8Brhm+XVYuzQ9Eu5aGvIv5Ju21MvlJwVQgzKr8TYLboBcuYZuIUm631e7AwRanUW9JXjYcsAZw2/PtMRbC+aocZ1WZXecGIScj4xwTEX+hHF1FjZF21IQu5bRsh20saI6IK1CfHhvTlQxiUhbscz8VvfZ4eHPmHtsJUcZOW24ynOTNAGngRTiAJ1jMVAXFqZguMVh7q6NGypWZM3s7GKOe8TRQxi9e6FO0e6uudoJYg8h0Myn1xhottBGaw0J4F2uj+qxzskx/O/19SpbmyvzqBmojNPe5Qib9/T77oG3cdrBb1GVfO49TGtyFeAE4eweyWFzSiiRYsFGGdBLytq4dIvLKNfoE6PxlmeXfJIO2DR8ouPY1GZZbNXMbCiL+172TOw8DuxRVeL82hFCUwHpi16bbfSySLGA1siU9xQvibNY9JLx8vX9HPsv7CRR0j0+Ztu0RgBqeSmVMlatwqzDdMEP5Tym8QrSrjCC1Tk5kRWCuugFHhg5pxtAkUqbppE9cw0c8UNsYP7gy3Sb3dgZ9yWrEQbwnH1fp35NHaqJD7xcuQnB1OtOefc+cYV0FbH8+yrwolykzrdxR9Rf/Ha3UQCPnx8zuecKGJajV+5V890jjwP1f8H7Q3pmhNU3VroAPo3Z6VaUDPM5wcXaAqPPMxIQGOumIl5YLxoV4Y3lzciLxZY1JJdnlq7mGrth/+vzGsBXDHd1Kdqmo3p9LWPzxhVb81Y0LhzDG7/LPr+dG/a8nPGTg8zkSRC05sPNKmXqK3DdVB0u/K5K+r8VDckQlJmvmmw+48kw=='
                },
          })
          .done(function(data) {
          //console.log('SUCCESS');
          var andmed = JSON.parse(data);
          sisseloginud = andmed[0].user_claims[10].val;
          $("#sisseloginudkasutaja").text(sisseloginud);
          })
          .fail(function( jqxhr, textStatus, error ) {
          var err = textStatus + ", " + error;
          sisseloginud = 'USER';
          $("#sisseloginudkasutaja").text(sisseloginud);
          //console.log( "Request Failed: " + err );

          });
      } else {
          //sisseloginud = 'USER';
          //$("#sisseloginudkasutaja").text(sisseloginud);
      };

      var kypsis = document.cookie;
      var customerurl = "/clients/customers/customers/febcust";
      //console.log(kypsis);

      //console.log(tulemus.length);
      //
      //Põhiaknasse kuvatav klientide tabel
      //
      var table = $('#pickle').DataTable({
        dom: 'Blfrtip',
        pageLength: 100,
        buttons: [
          'copy', 'csv', 'excel', 'pdf',
          {
          extend: 'print',
          customize: function ( win ) {
          $(win.document.body).find( 'table' )
            .attr( 'id', 'printSection' );
          }
          }
        ],
        bDestroy: true,
        bProcessing: true,
        deferRender: true,
        stateSave: true,
        ajax: {
        url : customerurl,
        method: "GET",
        dataSrc: ""
        },
        //data: tulemus,
        // Add color red to customer
        rowCallback: function(row, data, index) {
          if( data.YLE_MT == 1 || data.VABA_LIMIIT < 0 ) {
            $('td:eq(3)', row).addClass('bold-red');
          } else if (data.TARNEKEELD === 'E') {
            $('td', row).addClass('back-yellow');
          }
          //add button for arved modal
          if(data.ARVEID > 0) {
            var arveEmail = '';
            data.F_EMAIL != null ? arveEmail = data.F_EMAIL : arveEmail = data.E_MAIL;
            $('td:eq(12)', row).attr({'data-toggle': 'modal',
             'data-target': '#arved',
             'role':'button',
             'href': '#arved',
             'data-url': data.ID,
             'data-nimi': data.Kliendi_nimi,
             'data-email': arveEmail})
             .addClass('text-primary');
          }
        },
          // Calculate Totals over all columns/pages
        headerCallback: function( thead, data, start, end, display ) {
          var api = this.api(), data;

          // Remove the formatting to get integer data for summation
          var intVal = function ( i ) {
            return typeof i === 'string' ?
                i.replace(/[\$,]/g, '')*1 :
                typeof i === 'number' ?
                    i : 0;
          };
          //


          var total10 = api
            .column( 10, {'filter': 'applied'} )
            .data()
            .reduce( function (a, b) {
                return intVal(a) + intVal(b);
            }, 0 );
          var total9 = api
            .column( 9, {'filter': 'applied'} )
            .data()
            .reduce( function (a, b) {
                return intVal(a) + intVal(b);
            }, 0 );
          var total8 = api
            .column( 8, {'filter': 'applied'} )
            .data()
            .reduce( function (a, b) {
                return intVal(a) + intVal(b);
            }, 0 );
          var total7 = api
            .column( 7, {'filter': 'applied'} )
            .data()
            .reduce( function (a, b) {
                return intVal(a) + intVal(b);
            }, 0 );
          var total6 = api
            .column( 6, {'filter': 'applied'} )
            .data()
            .reduce( function (a, b) {
                return intVal(a) + intVal(b);
            }, 0 );
          var total5 = api
            .column( 5, {'filter': 'applied'} )
            .data()
            .reduce( function (a, b) {
                return intVal(a) + intVal(b);
            }, 0 );
          var total4 = api
            .column( 4, {'filter': 'applied'} )
            .data()
            .reduce( function (a, b) {
                return intVal(a) + intVal(b);
            }, 0 );

            total10 = Math.round(total10).toLocaleString('et-EE',{style: 'decimal' });
            total9 = Math.round(total9).toLocaleString('et-EE',{style: 'decimal' });
            total8 = Math.round(total8).toLocaleString('et-EE',{style: 'decimal' });
            total7 = Math.round(total7).toLocaleString('et-EE',{style: 'decimal' });
            total6 = Math.round(total6).toLocaleString('et-EE',{style: 'decimal' });
            total5 = Math.round(total5).toLocaleString('et-EE',{style: 'decimal' });
            total4 = Math.round(total4).toLocaleString('et-EE',{style: 'decimal' });

          $(thead).find('th').eq(10).html( 'Tarnitud<br>'+(total10) );
          $(thead).find('th').eq(9).html( 'Kokku<br>'+(total9) );
          $(thead).find('th').eq(8).html( '&Sigma;>Tähtaja<br>'+(total8) );
          $(thead).find('th').eq(7).html( 'Vanem<br>'+(total7) );
          $(thead).find('th').eq(6).html( '180P<br>'+(total6) );
          $(thead).find('th').eq(5).html( '30P<br>'+(total5) );
          $(thead).find('th').eq(4).html( 'Aegumata<br>'+(total4) );
          },
        columns: [
          {
          "className"      : 'details-control',
          "defaultContent" : '',
          "data"           : null,
          "orderable"      : false
          },
          {
          //"className"      : 'stop-dist',
          "defaultContent" : '',
          "data"           : "TARNEKEELD",
        //  "render"         : function (data, type, row, meta) {
        //    return  null;
        //    },
          "orderable"      : true
          },
          {
          "defaultContent" : '',
          "data"           : "KOONDARVE",
          "orderable"      : true
          },
         { "data"     : "Kliendi_nimi",
           "className": 'bold',
            },
         { "data"     : "AEGUMATA",
           "render"   : $.fn.dataTable.render.number( ' ', ',', 0 ) },
         { "data"     : "30P",
           "render"   : $.fn.dataTable.render.number( ' ', ',', 0 ) },
         { "data"     : "180P",
           "render"   : $.fn.dataTable.render.number( ' ', ',', 0 )
          // "render"   : function (data, type, row, meta) {
          //  var ylelimiidi = row.KRED_LIMIIT - row.Tasumata_SUM ;
          //   return (ylelimiidi < 0 ? '<span class="text-danger">'+ylelimiidi+'</span>' : '<span class="text-success">'+ylelimiidi+'</span>') ;
          //   },
           },
          { "data"     : "VANEM" ,
            "render"   : $.fn.dataTable.render.number( ' ', ',', 0 )},
          { "data"     : "YLE_MT_KOKKU" ,
            "render"   : $.fn.dataTable.render.number( ' ', ',', 0 )},
          { "data"     : "KOKKU" ,
            "render"   : $.fn.dataTable.render.number( ' ', ',', 0 )},
          { "data"     :  "TARNITUD",
            "render"   : $.fn.dataTable.render.number( ' ', ',', 0 ) },
          { "data"     : "VABA_LIMIIT",
            "render"   : $.fn.dataTable.render.number( ' ', ',', 0 ) },
          { "data"     : "ARVEID" },
        ],
        "columnDefs": [
          { className: "dt-right", "targets": [4,5,6,7,8,9,10,11,12] },
          { className: "dt-nowrap", "targets": [3] }
          ],
        "order": [[8, 'desc']]
      });



      //
      // Add event listener for opening and closing row details
      //
      $('#pickle tbody').on('click', 'td.details-control', function () {
        var tr = $(this).closest('tr');
        //Find opened row number
        var row = table.row( tr );
        //console.log(row);
        var rownr = (row[0].toString());
        //write row number to rownr attribute
        tr.attr("rownr" , "rownr" + rownr);
        //console.log(tr);
        if ( row.child.isShown() ) {
          // This row is already open - close it
          row.child.hide();
          tr.removeClass('shown');
          }
          else {
          // Open this row
          //alert("avan rea");
          row.child( formaat(row.data(), "rownr" + rownr) ).show();
          tr.addClass('shown');
          }
          } ); //listener for green button
      //
      //listener for kommentaar modal open
      //
      $('#muudatekst').on('show.bs.modal', function (event) {
          //console.log('MODAL');
          var button = $(event.relatedTarget); // Button that triggered the modal
          var recipient = button.data('url'); // Extract info from data-* attributes
          var createdby = $('#sisseloginudkasutaja').text();
          var tekst = button.data('tekst');
          //console.log(createdby);
          if (tekst != null && tekst.length > 999){
          alert('Kommentaari pikkus võib maksimaalselt olla 1000 märki. Tee kommentaar lühemaks ja salvesta uuesti');
          return;
          };
          // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
          // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
          var modal = $(this);
          modal.find('.modal-body input[name="KOMMENTAAR"]').val(tekst);
          //modal.find('.modal-body form').attr('action', '/clients/customers/customers/'+recipient+'/update');
          modal.find('.modal-body input[name="CREATEDBY"]').val(createdby);
          modal.find('.modal-body button').attr("id", "nuppMuudaKommentaar")
          .attr("data-rn", button.data('rn'))
          .attr("data-url", '/clients/customers/customers/'+recipient+'/update');
          })

      /*
      * Listener for Comments Save button #nuppMuudaKommentaar
      */
      $(document).on('click', '#nuppMuudaKommentaar' , function(event) {
        event.preventDefault();
        var url = '';
        var button = $(event.relatedTarget);
        //find row identificator
        var rn = parseInt(event.target.dataset.rn.replace('rownr',''));
        url = event.target.dataset.url;
        //console.log(event.target.dataset.url);
        modal=$("#muudatekst");
        var tekst = modal.find('.modal-body input[name="KOMMENTAAR"]').val();
        if (tekst != null && tekst.length > 999){
          alert('Kommentaari pikkus võib maksimaalselt olla 1000 märki. Tee kommentaar lühemaks ja salvesta uuesti');
          return;
        } else {
          var createdby = modal.find('.modal-body input[name="CREATEDBY"]').val();
          //console.log($(this));
          //ajax post comments to database
          $.post( url,
            {KOMMENTAAR: tekst,
            CREATEDBY: createdby
            }, function () {
              var row = table.row(rn);
              //console.log(row.data());
              row.child( formaat(row.data(), "rownr" + rn) ).show();
              $('#muudatekst').modal('hide');
            });
          //find row that opened modal
          //var row = document.querySelector('tr[rownr="'+rn+'"]');
        }
      });

      //
      // Listener for arveTabel initialized
      //
    /*  $('#arveTabel').on('click', function() {
        var arveTabel = $('#arveTabel').DataTable().buttons.exportData({
        stripHtml: false
        });
        console.log(convertTableToHtml(arveTabel));
      });*/

      // Listener for SP Leping button
      // Avab SP lepingu uues aknas
      //
      $(document).on('click', '#SPlink', function (event) {

            //var button = $(event.relatedTarget) // Button that triggered the modal
            var SPLeping = $(this).attr('data-url') // Extract info from data-* attributes
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            //var modal = $(this);
            //console.log(SPLeping);
            var url = "https://febas.sharepoint.com/Lists/Kliendilepingud/DispForm.aspx?ID="+SPLeping;
            window.open(url, '_blank');
          });

      // Listener for Uus SP Leping
      // Loob SP lepingu ja avab selle redigeerimiseks uues aknas
      //
      $(document).on('click', '#SPcreate', function (event) {
            $('body').addClass('waiting');
            //var button = $(event.relatedTarget); // Button that triggered the modal
            var SPLeping = $(this).attr('data-url'); // Extract info from data-* attributes
            var SPNimi = $(this).attr('data-name');
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            //var modal = $(this);
            //console.log(SPLeping);
            var url = "/test/"+SPLeping+"/"+SPNimi+"/0";

            //
            // API call "add" customer to SP
            //
            $.getJSON(url, function (vastus) {
              //alert(JSON.parse(vastus).LepingId);
              var urluus = "https://febas.sharepoint.com/Lists/Kliendilepingud/EditForm.aspx?ID="+
              JSON.parse(vastus).LepingId;
              $('body').removeClass('waiting');
              location.reload();
              var win = window.open(urluus, '_blank');
              if (win) {
                win.focus();
              } else {
              alert('Luba sellel saidil popup aknad, muidu ei saa avada kliendilepingu redigeerimise akent!');
              }

            });
            //window.open(url, '_blank');
        });

        // Listener for SP Leping button
        // Avab SP lepingu uues aknas
        //
        $(document).on('click', '#SPfirma', function (event) {

              //var button = $(event.relatedTarget) // Button that triggered the modal
              var SPfirma = $(this).attr('data-url'); // Extract info from data-* attributes
              // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
              // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
              //var modal = $(this);
              //console.log(SPfirma);
              var url = "https://febas.sharepoint.com/Lists/Firma/DispForm.aspx?ID="+SPfirma;
              window.open(url, '_blank');
            });

      //
      //listener for showing arved modal
      //
      $('#arved').on('show.bs.modal', function (event) {
            //console.log('MODAL');
            $('#emailForm').addClass('hidden');
            $('#arveTabel').DataTable().button(2).enable();
            var button = $(event.relatedTarget) // Button that triggered the modal
            var recipient = button.data('url') // Extract info from data-* attributes
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            var modal = $(this);
            var arvedurl = "/clients/customers/customers/"+recipient+"/arve";
            var kliendinimi = button.data('nimi');
            var yleTahtaja = 0;
            var mail = button.data('email');
            var aeg = new Date();
            var kuu = ((aeg.getMonth()+1)>=10)? (aeg.getMonth() + 1) //till oct add 0 to beginning
            : "0" + (aeg.getMonth() + 1);
            //console.log(aeg.getMonth());
            //mail address to form field
            $('#formcontrol1').val(mail);
            var mailBody = $('#arveTabel').DataTable().buttons.exportData({
            "stripHtml": false
            })

            //Invoices modal header
            $("#kliendinimi").html("<b>"+kliendinimi + "</b> ( "+ mail
            +" ) tasumata arved seisuga " +
            aeg.getDate()+"/"+ kuu +
            "/"+ aeg.getFullYear());



            //
            //Modaalaknasse kuvatav arvete tabel
            //
            var arvetable = $('#arveTabel').DataTable({
              destroy: true,
              paging: false,
              scrollY: 600,
              ajax: {
              url : arvedurl,
              method: "GET",
              dataSrc: ""
              },
              dom: 'Brti',
              buttons: [ //button definations
                //'copyHtml5', 'csvHtml5', 'excelHtml5',
                {
                extend: 'pdfHtml5', //add pdf title
                title:  kliendinimi + " tasumata arved seisuga " +
                            aeg.getDate()+"/"+ kuu +
                            "/"+ aeg.getFullYear()
                },
              /*  {
                extend: 'print',
                //autoPrint: false, print header
                title:      kliendinimi + " tasumata arved seisuga " +
                            aeg.getDate()+"/"+ kuu +
                            "/"+ aeg.getFullYear(),
                customize: function ( win ) {
                
                $(win.document.body).find( 'table' )
                  .attr( 'id', 'printSection' );
                $(win.document.body).find('h1')
                .attr('id','printSection').wrap('<div class="header-print" id=printSection></div>');
                }
                },*/
                { //button send email
                  text: 'Email',
                  action: function ( e, dt, node, config ) {
                  //show email fields
                    $('#emailForm').removeClass('hidden');
                  //disable email button until email is sent
                    arvetable.button(2).disable();
                  }
                },
                { //button print HTML table
                  text: 'Print',
                  action: function ( e, dt, node, config ) {
                  
                   var arveTabelHtml = document.createElement('div');
                   $(arveTabelHtml).attr('id', 'printSection');
                   var header = "<h4>"+kliendinimi + " tasumata arved seisuga " +
                            aeg.getDate()+"/"+ kuu +
                            "/"+ aeg.getFullYear()+"</h4>";
                  
                  //console.log(header);

                   var arveTabel = $('#arveTabel').DataTable().buttons.exportData({
                      stripHtml: false,
                      format: {
                        body: function(d, e, f, g) {
                          var spanColor = $(g).filter(".bold-red");
                          return spanColor.length > 0 ? spanColor[0].innerHTML : d;
                        }
                      }
                      });


                     $(arveTabelHtml).html(header + convertTableToHtml(arveTabel));

                    var cloned = $('.modal-open').clone();
                    
                    var printSection = $(arveTabelHtml);

                    printSection.appendTo('body');
                    var stiil = $('#printSection').find('style').remove();
                    $('#printSection').find('table').addClass('table, table-bordered');
                    stiil.appendTo('head');

                    var toggleBody = $('body *:visible');
                    toggleBody.hide();

                    $('#printSection, #printSection *').show();
                    window.print();
                    printSection.remove();
                    toggleBody.show();
                  }
                },
                { //button copy clipboard
                  text: 'CopyHtml',
                  action: function ( e, dt, node, config ) {
                  //copy arved to clipboard
                  var arveTabel = $('#arveTabel').DataTable().buttons.exportData({
                    stripHtml: false,
                    format: {
                      body: function(d, e, f, g) {
                        //console.log(d);
                        //console.log(e);
                        //console.log(f);
                        var spanColor = $(g).filter(".bold-red");
                        //console.log($(g).filter(".bold-red")[0].innerHTML);
                        return spanColor.length > 0 ? spanColor[0].innerHTML : d;
                      }
                    }
                    });
                  
                  var el = document.createElement('textarea');
                  el.id = 'copyclip';
                  el.value = convertTableToHtml(arveTabel);
                  $("#arved").find(".modal-header").append(el);
                  //console.log($("#arved").find(".modal-header").html());
                  //document.body.appendChild(el);
                  //el.focus();
                  el.select();
                  var b = document.execCommand('copy');
                  $("#copyclip").remove();
                    //alert(b);

                  }
                }
              ],
              createdRow: function(row, data, dataIndex) {
                //console.log(moment());
                //console.log(moment(data.MAKSE_KUUPÄEV, 'DD-MM-YYYY'));
                // Remove the formatting to get integer data for summation
                var intVal = function ( i ) {
                  return typeof i === 'string' ?
                      i.replace(/[\$,]/g, '')*1 :
                      typeof i === 'number' ?
                          i : 0;
                };
                if( moment().isAfter(moment(data.MAKSE_KUUPÄEV, 'DD-MM-YYYY'))) {
                //add bold-red if invoice due date is past, add style for email
                  $('td:eq(2)', row).addClass('bold-red')
                  .wrapInner('<span class="bold-red" style="font-weight: bold; color: red !important;"></span>');
                  $('td:eq(5)', row).addClass('yleaja');
                  //yleTahtaja+=intVal(data.TASUMATA);
                  //console.log(yleTahtaja);
                }
              },
              headerCallback: function( thead, data, start, end, display ) {
                var api = this.api(), data;

                // Remove the formatting to get integer data for summation
                var intVal = function ( i ) {
                  return typeof i === 'string' ?
                      i.replace(/[\$,]/g, '')*1 :
                      typeof i === 'number' ?
                          i : 0;
                };

                // Total over all pages


                total5 = api
                  .column( 5 )
                  .data()
                  .reduce( function (a, b) {
                      return intVal(a) + intVal(b);
                  }, 0 );
                total4 = api
                  .column( 4 )
                  .data()
                  .reduce( function (a, b) {
                      return intVal(a) + intVal(b);
                  }, 0 );
                total3 = api
                  .column( 3 )
                  .data()
                  .reduce( function (a, b) {
                      return intVal(a) + intVal(b);
                  }, 0 );
                yleTahtaja = api
                  .cells( '.yleaja')
                  .data()
                  .reduce( function (a, b) {
                      return intVal(a) + intVal(b);
                  }, 0 );

                  total5 = total5.toLocaleString('et-EE',{maximumFractionDigits: 2 });
                  total4 = total4.toLocaleString('et-EE',{maximumFractionDigits: 2 });
                  total3 = total3.toLocaleString('et-EE',{maximumFractionDigits: 2 });

                  var yleaja = yleTahtaja.toLocaleString('et-EE',{maximumFractionDigits: 2 });

                $(thead).find('th').eq(5).html( 'Tasumata<br>'+(total5)+'<br>'
                +'<span style="font-weight: bold; color: red !important;">'+yleaja+'</span>' );
                $(thead).find('th').eq(4).html( 'Tasutud<br>'+(total4) );
                $(thead).find('th').eq(3).html( 'Summa<br>'+(total3));
                },
              columns: [
                {data : 'ARVE_NUMBER'},
                {data : 'ARVE_KUUPÄEV'},
                {data : 'MAKSE_KUUPÄEV'},
                {data : 'ARVE_SUMMA',
                "render"   : $.fn.dataTable.render.number( ' ', ',', 2 )},
                {data : 'TASUTUD',
                "render"   : $.fn.dataTable.render.number( ' ', ',', 2 )},
                {data : 'TASUMATA',
                "render"   : $.fn.dataTable.render.number( ' ', ',', 2 )},
                {data : 'FILIAAL'}
                ],
              columnDefs: [
                { className: "dt-right", "targets": [3,4,5] }
                ],
              order   : [[2, 'asc']]
            });
            //console.log(yleTahtaja);
          });
      //delete modal contents
      $("body").on("click", ".close", function(){
        // delete arved and kommentaar content
          $(".arve").remove();
          $(".kommentaar").remove();
          });

      //add print id for printing area
      $(document).on('click', '#btnPrint', function(){
            $('.printMe').printElem();
          });

      //send mail
      $(document).on('click', '#saadaMail', function(){
            $('#emailForm').addClass('hidden');
            $('#arveTabel').DataTable().button(2).enable();
            var arveTabel = $('#arveTabel').DataTable().buttons.exportData({
            stripHtml: false,
            format: {
              body: function(d, e, f, g) {
                //console.log(d);
                //console.log(e);
                //console.log(f);
                var spanColor = $(g).filter(".bold-red");
                //console.log($(g).filter(".bold-red")[0].innerHTML);
                return spanColor.length > 0 ? spanColor[0].innerHTML : d;
              }
            }
            });
            var emailAddress = parseEmailAddress($('#formcontrol1').val());
             var mailMessage = constructEmailMessage(emailAddress,
             convertTableToHtml(arveTabel),
             $('#formcontrol2').val(),
             $('span#kliendinimi').text()
             );
            //console.log(arveTabel);
            //$('#testarea').html(parseEmailAddress($('#formcontrol1').val())
            //.join(', ')+'<br>' + convertTableToHtml(arveTabel));
            //$('#testarea').html(JSON.stringify(mailMessage));
            //console.log($('#sisseloginudkasutajaemail').text())
            //ajax post comments to database
            $.post( '/clients/customers/sendMail',
              { message: JSON.stringify(mailMessage),
                user: $('#sisseloginudkasutajaemail').text()},
                function (status) {
                if(status.status == 202) {
                  alert("Kiri saadetud!");
                } else {
                  alert("Kirja ei saadetud! Staatus "+status.status );
                }
                //console.log(status);
              });

          });

      //cancel mail
      $(document).on('click', '#cancelMail', function(){
            $('#emailForm').addClass('hidden');
            $('#arveTabel').DataTable().button(2).enable();
            $('#testarea').html('');
          });

      //add events for table filters
      $("#limiit:checkbox, #tahtaeg:checkbox, :radio").on("click", function() {
          table.draw();
          //console.log('Table DRAW');
          });
      $("#kokkuArved:checkbox").on("click", function() {
      /*  if($("#kokkuArved").is(':checked'))
          table.column(9).search('.0', true, false).draw();
        else
          table.columns().search('').draw();*/
          //console.log('click kokku arved');
          table.draw();
          });

      //delete comments event
      $(document).on("click", ".deleterow", function (e){
        if(confirm('Kas soovid kommentaari kustutada?')) {
          var rn = parseInt($(this).closest('table[data-rn]').data('rn').replace('rownr',''));
          var row = table.row(rn);
          var url = "/clients/customers/customers/deletecomment";
          var comment={};
          comment.kommId = parseInt((e.target.id).substring(4));
          comment.deleted = $('#sisseloginudkasutaja').text();
          $.post(url, comment, function(){
          //location.reload();
          row.child( formaat(row.data(), "rownr" + rn) ).show();
          });
        } else {
          e.preventDefault();
        }
        });

      //Check every 15 minutes if DB is updated do refresh
      var xx = setInterval(function() {
        //retrieve timestamp from db
        $.getJSON('/clients/customers/timestamp', function( data) {
          var newTimeStamp = data[0].DB_UPDATETIME;
          //console.log(newTimeStamp);
          if(data.length > 0) {
            if(Date.parse(newTimeStamp) > Date.parse(mainTimeStamp) ) {

              var cdCounter = 9; //..from to 0
              //counts seconds and refresh if no user activity
              setIntervalX( function(a) {
                var tulemus = cdCounter-a; //a is step counter
                if(a < 10) {
                 $('#cdTimer').text(tulemus).removeClass('hidden');
                 } else {
                  mainTimeStamp = newTimeStamp;
                  $('#cdTimer').addClass('hidden');
                  location.reload();
                  }
              }, 1000, 11);

            }
          }
        });
        }, 900000);
    }); //end document ready

    // interval fn runs repetitions times
    function setIntervalX(callback, delay, repetitions) {
      var x = 0;
      var intervalID = window.setInterval(function () {

        callback(x);

       if (++x === repetitions) {
           window.clearInterval(intervalID);
       } else if (idleTime === 0) { //user has made input
          x = 0;
       }
       }, delay);
    };
    //printimine
    jQuery.fn.extend({
    	printElem: function() {
    		var cloned = this.clone();
        var printSection = $('#printSection');
        if (printSection.length == 0) {
        	printSection = $('<div id="printSection"></div>')
        	$('body').append(printSection);
        }
        printSection.append(cloned);
        var toggleBody = $('body *:visible');
        toggleBody.hide();
        $('#printSection, #printSection *').show();
        window.print();
        printSection.remove();
        toggleBody.show();
    	}
    });
    function formaat ( d, rn ) {
      // `d` is the original data object for the row
      //console.log(d);
      var detailsTable = [];
      var kommentsTable = [];
      var contactsTable = [];
      var details = $('<div id="details"></div>')
        .addClass( 'loading' )
        .text( 'Loading...' );
      //var tarnekeeld = "Ei";
      //if (!d.TARNEKEELD) { tarnekeeld = "Jah"};
      //
      // Kommentaaride päring
      var url = "/clients/customers/customers/"+d.ID+"/komm";
      var kontaktUrl = "/clients/customers/customers/"+d.ID+"/kontakt";
      $.getJSON(kontaktUrl+'?'+new Date().getTime(), function( kontaktData) { //read customer comments history from url
        $.getJSON(url+'?'+new Date().getTime(), function( data) { //read customer comments history from url
          detailsTable[0] = '<div class="row"><div class="col-lg-8">' //detailandmed
          +'<table cellpadding="5" cellspacing="0" border="0"'
          +' style="padding-left:50px;">';
          //Customer details table row 1
          detailsTable[1] = '<tr>';
          detailsTable[2] = '<td class="alamtabel">Krediidilimiit</td>';
          detailsTable[3] = '<td>'+Number(d.KRED_LIMIIT).toFixed(2)+'</td>';
          detailsTable[4] = '<td class="alamtabel">Krediidi haldur:</td>';
          detailsTable[5] = '<td>'+d.TEHNIK+'</td>';
          detailsTable[6] = '<td class="alamtabel">Kliendikood:</td>';
          detailsTable[7] = '<td>'+d.KLIENDIKOOD+'</td>';
          detailsTable[8] = '<td class="alamtabel">Makseaeg:</td>';
          detailsTable[9] = '<td>'+d.MAKSETINGIMUS+'</td>';
          detailsTable[10] = '</tr>'; //1 row end
          //Customer details table row 2
          detailsTable[11] = '<tr>';
          detailsTable[12] = '<td class="alamtabel">MÄRKUS:</td>';
          detailsTable[13] = '<td>'+d.MÄRKUS_1+'</td>';
          //detailsTable[14] = '<td class="alamtabel">Kred.limiit:</td>';
          //detailsTable[15] = '<td>'+Number(d.KRED_LIMIIT).toFixed(2)+'</td>';
          //detailsTable[16] = '<td class="alamtabel">Tarnekeeld:</td>';
          //detailsTable[17] = '<td>'+tarnekeeld+'</td>';
          //detailsTable[18] = '<td></td>';
          detailsTable[19] = '<td>'+d.MÄRKUS_2+'</td>';
          detailsTable[20] = '</tr>';
          //detailsTable[21] = '<tr>';
          //detailsTable[22] = '<td class="alamtabel">Maksmata arveid:</td>';
          //detailsTable[23] = '<td>'+d.ARVEID+'</td>';
          //detailsTable[23] = '</tr>';
          //Customer details table row 3
          detailsTable[25] = '<tr>';//buttons row starts
          detailsTable[26] = '<td class="alamtabel"></td>';
          //detailsTable[27] = '<td>'+d.KOMMENTAAR+'</td>';
          //Button Muudakommentaar
          detailsTable[28] = '<td><button type="button" class="btn btn-primary btn-sm"'+
          ' data-toggle="modal" data-target="#muudatekst" data-url="'+d.ID+
          '" data-user= "'+ $('#sisseloginudkasutaja').text() +'" data-tekst="'/*+d.KOMMENTAAR*/+
          '" data-rn="'+rn+'">'+
          'Muuda kommentaar</button></td>';
          //Button open SP Leping
          if(d.SP_ID != null) {
            detailsTable[29] = '<td><button type="button" id="SPlink" class="btn btn-primary btn-sm" data-url="'+d.SP_ID+'"> '+
            'SP Leping</button></td>';
          //Button create SP leping
          } else if (d.REG_NR != ''){
          detailsTable[29] = '<td><button type="button" id="SPcreate" class="btn btn-primary btn-sm" data-url="'+
          d.REG_NR+'" '+ ' data-name="'+d.Kliendi_nimi+'">'+
          'Uus SP Leping</button></td>';
          }
          //button SP Firma
          if(d.SP_FIRMA_ID != null) {
            detailsTable[30] = '<td><button type="button" id="SPfirma" '+
            'class="btn btn-primary btn-sm" data-url="'+d.SP_FIRMA_ID+'"> '+
            'SP Firma</button></td>';
          }
          //button row and details table ends finantsist table starts
          detailsTable[31] = '</tr></table></div>'+
          '<div class="col-lg-4">'+
          '<div class="panel-group">';
          //finantsist table
           if(d.F_NIMI != null || d.F_TELEFON != null || d.F_EMAIL != null){
            //console.log(d.F_EMAIL);
            detailsTable[32] = '<div class="panel panel-default">'+
            '<div class="panel-heading">'+
            '<strong>Finantsisti andmed:</strong>'+
            '</div>'+ //panel heading end
            '<div class="panel-body">'+
            '<table class="borderless" cellpadding="1" cellspacing="0" '+
            'border="0" style="padding-left:10px;">'+
            '<tr><td><strong>Nimi:</strong></td>'+
            '<td>'+d.F_NIMI+'</td></tr>'+
            '<tr><td><strong>Telefon:</strong></td>'+
            '<td>'+d.F_TELEFON+'</td></tr>'+
            '<tr><td><strong>E-mail:</strong></td>'+
            '<td>'+d.F_EMAIL+'</td></tr>'+
            '</table>'+ //finantsist table end
            '</div>'+ //panel-body end
            '</div>'; //panel end
            };
          //detailsTable[33] = '';
          //detailsTable[34] = '</tr>';
          //end finantsist div col-lg-4 col-row
          detailsTable[35] = '</div>'+ //panel group end
          '</div>'+ //col-lg-4 end
          '</div>'; //col row end
          //subtable Kommentaarid
          detailsTable[36] = '<div class="row"><div class="col-lg-6">'+ //kommentaarid
          '<div class="panel panel-default">'+
          '<div class="panel-heading alamtabel">'+
          '<strong>Kommentaarid:</strong></div>'+
          '<div class="panel-body">'+
          '<table class="fix-height" cellpadding="5" cellspacing="0"'
          +' border="0" style="padding-left:50px;" data-rn="'+rn+'">';
          detailsTable[37] = '<tr><td></td><td></td><td></td></tr>';
          //detailsTable[38] = '</tr>';
          //Subtable Kontaktisikud
          detailsTable[39] = '</table></div></div></div>';
          detailsTable[40] = '<div class="col-lg-6">'+ //kontaktisikud
          '<div class="panel panel-default">';
          detailsTable[41] = '<div class="panel-heading alamtabel">'+
          '<strong>Kontaktisikud:</strong></div>';
          detailsTable[42] = '<div class="panel-body">'+
          '<table class="fix-height" cellpadding="5" cellspacing="0" '+
          'border="0" style="padding-left:50px;">';
          detailsTable[43] = '<tr><td><strong>Nimi</strong></td>'+
          '<td><strong>Isikukood</strong></td>'+
                            '<td><strong>Kehtivus</strong></td>'+
                            '<td><strong>Telefon</strong></td>'+
                            '<td><strong>E-mail</strong></td>'+
                            '<td><strong>Bkaart</strong></td>'+
                            '<td><strong>Märkused</strong></td></tr>';
          detailsTable[45] = '</table></div></div></div>';

          //create comments Table
          //console.log(kontaktData.length);
          if (data.length > 0) {
            for (var i=0; i < data.length; i++) {
              //console.log(data[i].DELETED);
              if(!data[i].DELETED) {
              kommentsTable[i] = '<tr><td class="deleterow" id="komm'+data[i].ID+'"></td><td>'+data[i].KOMMENTAAR+'</td><td>'+
              data[i].CREATED+ '</td><td>'+data[i].CREATEDBY+'</td></tr>';
              }
            }
          detailsTable[38] = kommentsTable.join('');
          } else {
          detailsTable[38] = '<tr><td>Kommentaarid puuduvad</td></tr>';
          };
          //create contacts table
          if (kontaktData.length > 0) {
            for (var i=0; i < kontaktData.length; i++) {
              contactsTable[i] = '<tr><td>'+
              kontaktData[i].NIMI+'</td><td>'+
              kontaktData[i].ISIKUKOOD+ '</td><td>'+
              kontaktData[i].KEHTIVUS+'</td><td>'+
              kontaktData[i].TELEFON+'</td><td>'+
              kontaktData[i].EMAIL+'</td><td>'+
              kontaktData[i].BKAART+'</td><td>'+
              kontaktData[i].MARKUSED+'</td>'+
              '</tr>';
            }
          detailsTable[44] = contactsTable.join('');
          } else {
          detailsTable[43] = '<tr><td>Kontaktisikud puuduvad</td></tr>';
          };

          details
              .html(detailsTable.join(''))
              .removeClass('loading');
        }); //end getJSON
      }); //end getJSON
      return details;
    //          for (var i = 1; i < ((data.length < 5) ? data.length : 5 ); i++) {
    //            '<tr class="alamtabel"><td>' +data[i].KOMMENTAAR+ '</td>'/*<td>" +data[i].CREATED+ "</td><td>"+data[i].CREATEDBY+"</td>*/+'</tr>'
    //          } +
    }
    function convertTableToHtml(myTable) {
      //console.log(myTable);
      var html = "<table>"+
      "<style>th, td {border-bottom: 1px solid #ddd; padding: 4px;}"+
      "th {font-weight: bold;}</style><tbody>";
      //add header row
      html += "<tr>";
      for(var i=0;i<myTable.header.length;i++)
          html+="<th>"+myTable.header[i]+"</th>";
      html += "</tr>";
      //add rows
      for (var i = 0; i < myTable.body.length; i++)
      {
          html += "<tr>";
          for (var j = 0; j< myTable.body[0].length; j++) {
            if (j== 3 || j== 4 || j == 5) {
              html += "<td style='text-align: right;'>" + myTable.body[i][j] + "</td>";
            } else {
              html += "<td>" + myTable.body[i][j] + "</td>";
            }
          }


          html += "</tr>";
      }
      html += "</tbody></table>";
      return html;
    }
    //parse email adresses from string
    function parseEmailAddress (text) {
     return text.match(/[A-z0-9]+.[A-z0-9]+@[A-z0-9]+.[A-z]{2,3}/g);
    }

    // Construct email from address - array of addresses,
    // htmltable - string, usermessage - string, userSubject - string
    function constructEmailMessage (emailaddress, htmlTable, userMessage, userSubject) {

      var torecipients = [];
      userMessage = userMessage.replace(/\n/g, '</br>');

        for(var i = 0; i < emailaddress.length; i++) {
          var emailAddress = {
            EmailAddress: {
              Address: emailaddress[i]
              }
            }
            torecipients.push(emailAddress);
          }
      var emailMessage = {
        Message: {
          Subject: userSubject,
          Body: {
            ContentType: 'HTML',
            Content: "<html><head> <meta http-equiv='Content-Type'"+
            " content='text/html; charset=us-ascii'>"+
            "<style>th, td {border-bottom: 1px solid #ddd; padding: 4px;}"+
            "th {font-weight: bold;}td.align-right {text-align: right;}</style>"+
            " <title></title> </head>\n "+
            " <body style='font-family:calibri'><p>"+
            userMessage+"</p></br>"+
            htmlTable+"</body></html>"
          },
          ToRecipients: torecipients
        },
        SaveToSentItems: true
      };
      return emailMessage;
    }
